// Mocks generated by Mockito 5.4.0 from annotations
// in flutter_redemption_scbtechx/test/widget_test.dart.
// Do not manually edit this file.

// ignore_for_file: no_leading_underscores_for_library_prefixes
import 'dart:async' as _i6;

import 'package:dio/dio.dart' as _i2;
import 'package:flutter_redemption_scbtechx/models/product_data_rs.dart' as _i4;
import 'package:flutter_redemption_scbtechx/models/send_email_rq.dart' as _i8;
import 'package:flutter_redemption_scbtechx/models/user_data_rs.dart' as _i3;
import 'package:flutter_redemption_scbtechx/services/email_service.dart' as _i7;
import 'package:flutter_redemption_scbtechx/services/redemption_service.dart'
    as _i5;
import 'package:mockito/mockito.dart' as _i1;

// ignore_for_file: type=lint
// ignore_for_file: avoid_redundant_argument_values
// ignore_for_file: avoid_setters_without_getters
// ignore_for_file: comment_references
// ignore_for_file: implementation_imports
// ignore_for_file: invalid_use_of_visible_for_testing_member
// ignore_for_file: prefer_const_constructors
// ignore_for_file: unnecessary_parenthesis
// ignore_for_file: camel_case_types
// ignore_for_file: subtype_of_sealed_class

class _FakeDio_0 extends _i1.SmartFake implements _i2.Dio {
  _FakeDio_0(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeUserDataRs_1 extends _i1.SmartFake implements _i3.UserDataRs {
  _FakeUserDataRs_1(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

class _FakeProductDataRs_2 extends _i1.SmartFake implements _i4.ProductDataRs {
  _FakeProductDataRs_2(
    Object parent,
    Invocation parentInvocation,
  ) : super(
          parent,
          parentInvocation,
        );
}

/// A class which mocks [RedemptionService].
///
/// See the documentation for Mockito's code generation for more information.
class MockRedemptionService extends _i1.Mock implements _i5.RedemptionService {
  MockRedemptionService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get mainUrl => (super.noSuchMethod(
        Invocation.getter(#mainUrl),
        returnValue: '',
      ) as String);
  @override
  set mainUrl(String? _mainUrl) => super.noSuchMethod(
        Invocation.setter(
          #mainUrl,
          _mainUrl,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i2.Dio get dio => (super.noSuchMethod(
        Invocation.getter(#dio),
        returnValue: _FakeDio_0(
          this,
          Invocation.getter(#dio),
        ),
      ) as _i2.Dio);
  @override
  set dio(_i2.Dio? _dio) => super.noSuchMethod(
        Invocation.setter(
          #dio,
          _dio,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i6.Future<_i3.UserDataRs> getUserData() => (super.noSuchMethod(
        Invocation.method(
          #getUserData,
          [],
        ),
        returnValue: _i6.Future<_i3.UserDataRs>.value(_FakeUserDataRs_1(
          this,
          Invocation.method(
            #getUserData,
            [],
          ),
        )),
      ) as _i6.Future<_i3.UserDataRs>);
  @override
  _i6.Future<_i4.ProductDataRs> getProductData() => (super.noSuchMethod(
        Invocation.method(
          #getProductData,
          [],
        ),
        returnValue: _i6.Future<_i4.ProductDataRs>.value(_FakeProductDataRs_2(
          this,
          Invocation.method(
            #getProductData,
            [],
          ),
        )),
      ) as _i6.Future<_i4.ProductDataRs>);
  @override
  _i6.Future<dynamic> get(
    String? url,
    dynamic Function(dynamic)? returnCallback,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [
            url,
            returnCallback,
          ],
        ),
        returnValue: _i6.Future<dynamic>.value(),
      ) as _i6.Future<dynamic>);
  @override
  _i6.Future<dynamic> post(
    String? url,
    dynamic data,
    dynamic Function(dynamic)? returnCallback, {
    Map<String, dynamic>? headers,
    num? countRepeat = 0,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [
            url,
            data,
            returnCallback,
          ],
          {
            #headers: headers,
            #countRepeat: countRepeat,
          },
        ),
        returnValue: _i6.Future<dynamic>.value(),
      ) as _i6.Future<dynamic>);
}

/// A class which mocks [EmailService].
///
/// See the documentation for Mockito's code generation for more information.
class MockEmailService extends _i1.Mock implements _i7.EmailService {
  MockEmailService() {
    _i1.throwOnMissingStub(this);
  }

  @override
  String get mainUrl => (super.noSuchMethod(
        Invocation.getter(#mainUrl),
        returnValue: '',
      ) as String);
  @override
  set mainUrl(String? _mainUrl) => super.noSuchMethod(
        Invocation.setter(
          #mainUrl,
          _mainUrl,
        ),
        returnValueForMissingStub: null,
      );
  @override
  _i2.Dio get dio => (super.noSuchMethod(
        Invocation.getter(#dio),
        returnValue: _FakeDio_0(
          this,
          Invocation.getter(#dio),
        ),
      ) as _i2.Dio);
  @override
  set dio(_i2.Dio? _dio) => super.noSuchMethod(
        Invocation.setter(
          #dio,
          _dio,
        ),
        returnValueForMissingStub: null,
      );
  @override
  dynamic sendEmail(_i8.SendEmailRq? rq) =>
      super.noSuchMethod(Invocation.method(
        #sendEmail,
        [rq],
      ));
  @override
  _i6.Future<dynamic> get(
    String? url,
    dynamic Function(dynamic)? returnCallback,
  ) =>
      (super.noSuchMethod(
        Invocation.method(
          #get,
          [
            url,
            returnCallback,
          ],
        ),
        returnValue: _i6.Future<dynamic>.value(),
      ) as _i6.Future<dynamic>);
  @override
  _i6.Future<dynamic> post(
    String? url,
    dynamic data,
    dynamic Function(dynamic)? returnCallback, {
    Map<String, dynamic>? headers,
    num? countRepeat = 0,
  }) =>
      (super.noSuchMethod(
        Invocation.method(
          #post,
          [
            url,
            data,
            returnCallback,
          ],
          {
            #headers: headers,
            #countRepeat: countRepeat,
          },
        ),
        returnValue: _i6.Future<dynamic>.value(),
      ) as _i6.Future<dynamic>);
}
